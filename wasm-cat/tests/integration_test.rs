use std::process::Command;use std::io::Write;use std::fs;#[test]fn test_cat_basic() {    // Create a temporary input file    let input_content = "Hello, world!\nThis is a test.";    let input_file_path = "test_input.txt";    let mut file = fs::File::create(input_file_path).expect("Could not create test input file");    file.write_all(input_content.as_bytes()).expect("Could not write to test input file");    // Run wasm-cat    let output = Command::new("cargo")        .arg("run")        .arg("--")        .arg(input_file_path)        .output()        .expect("Failed to execute command");    // Assert that the command ran successfully    assert!(output.status.success());    // Assert that the output matches the input content    assert_eq!(String::from_utf8_lossy(&output.stdout), input_content);    // Clean up the temporary file    fs::remove_file(input_file_path).expect("Could not remove test input file");}